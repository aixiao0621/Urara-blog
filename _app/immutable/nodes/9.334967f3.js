import{S as $p,i as zp,s as Wp,U as ae,y as qp,z as Gp,A as Zp,V as Qp,W as Pp,g as Kp,d as Yp,B as sF,X as gp,k as o,q as p,a as c,Y as S,e as Np,l as n,m as e,r as F,h as a,c as i,Z as R,n as y,b as r,D as l,E as lF}from"../chunks/index.cb04554d.js";import{P as aF}from"../chunks/post_layout.d05b1760.js";function oF(rs){let D,v,x,H,d,f,cs,Xa,Ts,Ja,Ba,Ss,Ta,Kl,V,is,Sa,Yl,$,ys,Ra,sa,P,Rs,Va,$a,Vs,za,la,z,ds,Wa,aa,Ds,qa,oa,h,$s,zs,Ga,Za,Ws,qs,Qa,Ka,Gs,Zs,Ya,na,W,Es,so,ea,_,Qs,q,lo,Ks,ao,oo,no,Ys,L,eo,sl,po,Fo,ll,to,ro,co,al,G,io,ol,yo,Do,Eo,nl,I,vo,el,fo,uo,pl,_o,Ao,pa,Z,vs,mo,Fa,fs,Fl,ho,ta,tl,Mp=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" javascript="true"><div class="language-id">javascript</div><div class='code-container'><code><div class='line'><span style="color: #C792EA">function</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">hook</span><span style="color: #89DDFF">()</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #89DDFF">    </span><span style="color: #546E7A">// frida 的入口</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #EEFFFF">Java</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">perform</span><span style="color: #F07178">(</span><span style="color: #C792EA">function</span><span style="color: #F07178"> </span><span style="color: #89DDFF">()</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #89DDFF">        </span><span style="color: #546E7A">// 以下为功能实现代码</span></div><div class='line'><span style="color: #F07178">        </span><span style="color: #C792EA">var</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">settings</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">Java</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">use</span><span style="color: #F07178">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">com.android.settings.DisplaySettings</span><span style="color: #89DDFF">"</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">        </span><span style="color: #C792EA">var</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">getMetricsCategory_func</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">settings</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">getMetricsCategory</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">        </span><span style="color: #EEFFFF">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">log:</span><span style="color: #89DDFF">"</span><span style="color: #F07178">)</span></div><div class='line'><span style="color: #F07178">        </span><span style="color: #EEFFFF">getMetricsCategory_func</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">implementation</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #C792EA">function</span><span style="color: #F07178"> </span><span style="color: #89DDFF">()</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">            </span><span style="color: #C792EA">var</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">result</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">this.</span><span style="color: #82AAFF">getMetricsCategory</span><span style="color: #F07178">()</span></div><div class='line'><span style="color: #F07178">            </span><span style="color: #EEFFFF">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">log:</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">===&gt;</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">result</span><span style="color: #F07178">)</span></div><div class='line'><span style="color: #F07178">            </span><span style="color: #89DDFF">return</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">result</span></div><div class='line'><span style="color: #F07178">        </span><span style="color: #89DDFF">&#125;</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #89DDFF">&#125;</span><span style="color: #F07178">)</span></div><div class='line'><span style="color: #89DDFF">&#125;</span></div><div class='line'><span style="color: #82AAFF">hook</span><span style="color: #EEFFFF">()</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #546E7A">// 或者: setTimeout(hook), 这里的setTimeout不是js标准库的setTimeout，作用和frida的javascript线程有关</span></div></code></div></pre>`,rl,g,Q,Co,cl,bo,ko,jo,K,xo,il,Lo,Io,ra,us,yl,Oo,ca,Y,_s,wo,ia,N,m,dl,Ho,Po,Dl,go,No,El,Uo,Mo,vl,Xo,Jo,O,fl,Bo,To,ul,So,Ro,U,Vo,ya,_l,Xp=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">// Objection 常用命令如下：</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">// 注入</span></div><div class='line'><span style="color: #EEFFFF">objection -g com.android.settings explore</span></div><div class='line'><span style="color: #EEFFFF">// 通过 -c 可以读取文件中的多条命令执行</span></div><div class='line'><span style="color: #EEFFFF">objection -g com.android.settings explore -c hook.txt</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">// 枚举内存中已加载的类</span></div><div class='line'><span style="color: #EEFFFF">android hooking list classes  </span></div><div class='line'><span style="color: #EEFFFF">// 在已加载的类中搜索包含关键字的类</span></div><div class='line'><span style="color: #EEFFFF">android hooking search classes </span><span style="color: #89DDFF">&lt;</span><span style="color: #EEFFFF">pattern</span><span style="color: #89DDFF">&gt;</span></div><div class='line'><span style="color: #EEFFFF">// 搜索包含关键字key的方法</span></div><div class='line'><span style="color: #EEFFFF">android hooking search methods </span><span style="color: #89DDFF">&lt;</span><span style="color: #EEFFFF">key</span><span style="color: #89DDFF">&gt;</span></div><div class='line'><span style="color: #EEFFFF">// 包含特定字符</span></div><div class='line'><span style="color: #EEFFFF">android hooking list classes </span><span style="color: #89DDFF">&lt;</span><span style="color: #EEFFFF">pattern</span><span style="color: #89DDFF">&gt;</span><span style="color: #EEFFFF"> </span></div><div class='line'><span style="color: #EEFFFF">// 获取指定类中的所有非构造函数的所有方法</span></div><div class='line'><span style="color: #EEFFFF">android hooking list class_methods </span><span style="color: #89DDFF">&lt;</span><span style="color: #EEFFFF">class_name</span><span style="color: #89DDFF">&gt;</span><span style="color: #EEFFFF"> </span></div><div class='line'><span style="color: #EEFFFF">// Hook类中的所有非构造函数的方法</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">顺序</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">android hooking watch class </span><span style="color: #89DDFF">&lt;</span><span style="color: #EEFFFF">class_name</span><span style="color: #89DDFF">&gt;</span><span style="color: #EEFFFF"> </span></div><div class='line'><span style="color: #EEFFFF">// Hook 指定函数方法</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">倒序</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">android hooking watch class_method com.az.az.loading.setXXXX </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">xx(overload)</span><span style="color: #89DDFF">"</span><span style="color: #EEFFFF"> --dump-args --dump-return --dump-backtrace</span></div><div class='line'><span style="color: #EEFFFF">// 主动调用,打印相关实例</span></div><div class='line'><span style="color: #EEFFFF">android heap search instances </span><span style="color: #89DDFF">&lt;</span><span style="color: #EEFFFF">classname</span><span style="color: #89DDFF">&gt;</span></div><div class='line'><span style="color: #EEFFFF">// 使用 hashcode 调用实例</span></div><div class='line'><span style="color: #EEFFFF">android heap execute </span><span style="color: #89DDFF">&lt;</span><span style="color: #EEFFFF">hashcode</span><span style="color: #89DDFF">&gt;</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&lt;</span><span style="color: #EEFFFF">methodname</span><span style="color: #89DDFF">&gt;</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">// 作业系统的使用</span></div><div class='line'><span style="color: #82AAFF">jobs</span><span style="color: #EEFFFF"> list</span></div><div class='line'><span style="color: #82AAFF">jobs</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">kill</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&lt;</span><span style="color: #EEFFFF">Hook ID</span><span style="color: #89DDFF">&gt;</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">// 列出进程的所有activity</span></div><div class='line'><span style="color: #EEFFFF">android hooking list activities</span></div><div class='line'></div><div class='line'><span style="color: #546E7A">############# 分 界 线 ##############</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">// Wallbreaker 的安装和使用</span></div><div class='line'><span style="color: #EEFFFF">mkdir -p </span><span style="color: #89DDFF">~</span><span style="color: #EEFFFF">/.objection/plugins/</span></div><div class='line'><span style="color: #EEFFFF">git clone https://github.com/hluwa/Wallbreaker </span><span style="color: #89DDFF">~</span><span style="color: #EEFFFF">/.objection/plugins/Wallbreaker</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">// 加载插件</span></div><div class='line'><span style="color: #EEFFFF">objection -g com.example.android explore  -P </span><span style="color: #89DDFF">~</span><span style="color: #EEFFFF">/.objection/plugins</span></div><div class='line'><span style="color: #EEFFFF">// 内存搜索类、实例</span></div><div class='line'><span style="color: #EEFFFF">plugin wallbreaker objectsearch LoginActivity</span></div><div class='line'><span style="color: #EEFFFF">// 根据类名搜索内存中已经被创建的实例，列出 handle 和 </span><span style="color: #82AAFF">toString</span><span style="color: #89DDFF">()</span><span style="color: #EEFFFF"> 的结果 --fullname 打印完整的包名</span></div><div class='line'><span style="color: #EEFFFF">plugin wallbreaker classdump com.example.android.Activity.LoginActivity --fullname</span></div><div class='line'><span style="color: #EEFFFF">// 查看对象的一些属性和方法</span></div><div class='line'><span style="color: #EEFFFF">plugin wallbreaker objectdump 0x2222 --fullname</span></div></code></div></pre>`,Al,C,b,ml,$o,zo,hl,Wo,qo,Cl,Go,Zo,Qo,As,bl,Ko,Yo,sn,ms,kl,ln,an,da,ss,hs,on,Da,jl,Jp=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" javascript="true"><div class="language-id">javascript</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">Java</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">perform</span><span style="color: #EEFFFF">(</span><span style="color: #C792EA">function</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">()</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span><span style="color: #F07178">  </span><span style="color: #546E7A">// 也可以不写（确保线程attach到安卓虚拟机上才执行）</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #89DDFF">...</span></div><div class='line'><span style="color: #89DDFF">    </span><span style="color: #546E7A">// Hook 模板</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #EEFFFF">Interceptor</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">attach</span><span style="color: #F07178">(</span><span style="color: #EEFFFF">addr</span><span style="color: #89DDFF">,&#123;</span><span style="color: #F07178">				</span><span style="color: #546E7A">// addr 是目标函数的地址</span></div><div class='line'><span style="color: #F07178">        onEnter</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">args</span><span style="color: #89DDFF">)</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">            </span><span style="color: #546E7A">/* do something with args */</span></div><div class='line'><span style="color: #F07178">        </span><span style="color: #89DDFF">&#125;,</span></div><div class='line'><span style="color: #F07178">        onLeave</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">retval</span><span style="color: #89DDFF">)</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">            </span><span style="color: #546E7A">/* do something with retval */</span></div><div class='line'><span style="color: #F07178">        </span><span style="color: #89DDFF">&#125;</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #89DDFF">&#125;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #89DDFF">...</span></div><div class='line'><span style="color: #89DDFF">&#125;</span></div></code></div></pre>`,xl,k,Cs,nn,Ll,en,pn,u,Fn,Il,tn,rn,Ol,cn,yn,wl,dn,Dn,Hl,En,vn,fn,E,un,Pl,_n,An,gl,mn,hn,Nl,Cn,bn,Ul,kn,jn,Ml,xn,Ln,Ea,ls,bs,In,va,ks,On,fa,Xl,Bp=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" javascript="true"><div class="language-id">javascript</div><div class='code-container'><code><div class='line'><span style="color: #C792EA">function</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">hook_native</span><span style="color: #89DDFF">()</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #C792EA">var</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">addr</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">Module</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">getExportByName</span><span style="color: #F07178">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">libnativetty.so</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">Java_az_test_nativetty_MainActivity_stringFromJNI</span><span style="color: #89DDFF">"</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span><span style="color: #F07178">		</span><span style="color: #546E7A">// 目标.so 和 函数名</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #EEFFFF">Interceptor</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">attach</span><span style="color: #F07178">(</span><span style="color: #EEFFFF">addr</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">        </span><span style="color: #82AAFF">onEnter</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #C792EA">function</span><span style="color: #F07178"> </span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">args</span><span style="color: #89DDFF">)</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">            </span><span style="color: #EEFFFF">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">jnienv =&gt; </span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">args</span><span style="color: #F07178">[</span><span style="color: #F78C6C">0</span><span style="color: #F07178">])</span></div><div class='line'><span style="color: #F07178">            </span><span style="color: #EEFFFF">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">jobj pointer =&gt; </span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">args</span><span style="color: #F07178">[</span><span style="color: #F78C6C">1</span><span style="color: #F07178">])</span></div><div class='line'></div><div class='line'><span style="color: #F07178">        </span><span style="color: #89DDFF">&#125;,</span></div><div class='line'><span style="color: #F07178">        </span><span style="color: #82AAFF">onLeave</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #C792EA">function</span><span style="color: #F07178"> </span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">retval</span><span style="color: #89DDFF">)</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">            </span><span style="color: #EEFFFF">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">retval =&gt; </span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">Java</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">vm</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">getEnv</span><span style="color: #F07178">()</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">getStringUtfChars</span><span style="color: #F07178">(</span><span style="color: #EEFFFF">retval</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">null</span><span style="color: #F07178">)</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">readCString</span><span style="color: #F07178">())</span></div><div class='line'><span style="color: #F07178">            </span><span style="color: #EEFFFF">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">——————————————————————————————</span><span style="color: #89DDFF">"</span><span style="color: #F07178">)</span></div><div class='line'><span style="color: #F07178">        </span><span style="color: #89DDFF">&#125;</span></div><div class='line'></div><div class='line'><span style="color: #F07178">    </span><span style="color: #89DDFF">&#125;</span><span style="color: #F07178">)</span></div><div class='line'><span style="color: #89DDFF">&#125;</span></div><div class='line'></div><div class='line'><span style="color: #82AAFF">setImmediate</span><span style="color: #EEFFFF">(hook_native)</span></div></code></div></pre>`,Jl,as,js,wn,ua,xs,Hn,_a,M,w,Pn,X,gn,Nn,Bl,Un,Mn,Xn,os,Jn,Tl,Bn,Tn,Aa,ns,Ls,Sn,ma,J,Rn,Sl,Vn,$n,ha,es,zn,Rl,Wn,Ca,Is,qn,ba,Vl,Tp=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" javascript="true"><div class="language-id">javascript</div><div class='code-container'><code><div class='line'><span style="color: #C792EA">function</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">write</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">path</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> contents</span><span style="color: #89DDFF">)&#123;</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #C792EA">var</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">fopen_addr</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">Module</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">findExportByName</span><span style="color: #F07178">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">libc.so</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">fopen</span><span style="color: #89DDFF">"</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #C792EA">var</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">fputs_addr</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">Module</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">findExportByName</span><span style="color: #F07178">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">libc.so</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">fputs</span><span style="color: #89DDFF">"</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #C792EA">var</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">fclose_addr</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">Module</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">findExportByName</span><span style="color: #F07178">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">libc.so</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">fclose</span><span style="color: #89DDFF">"</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></div><div class='line'></div><div class='line'><span style="color: #F07178">    </span><span style="color: #C792EA">var</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">fopen</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">new</span><span style="color: #F07178"> </span><span style="color: #82AAFF">NativeFunction</span><span style="color: #F07178">(</span><span style="color: #EEFFFF">fopen_addr</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> [</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">pointer</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">pointer</span><span style="color: #89DDFF">"</span><span style="color: #F07178">])</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #C792EA">var</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">puts</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">new</span><span style="color: #F07178"> </span><span style="color: #82AAFF">NativeFunction</span><span style="color: #F07178">(</span><span style="color: #EEFFFF">fputs_addr</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">int</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> [</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">pointer</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">pointer</span><span style="color: #89DDFF">"</span><span style="color: #F07178">])</span></div><div class='line'><span style="color: #F07178">    </span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #C792EA">var</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">fileName</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">Memory</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">allocUtf8String</span><span style="color: #F07178">(</span><span style="color: #EEFFFF">path</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #C792EA">var</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">mode</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">Memory</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">allocUtf8String</span><span style="color: #F07178">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">a+</span><span style="color: #89DDFF">"</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></div><div class='line'></div><div class='line'><span style="color: #F07178">    </span><span style="color: #C792EA">var</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">fp</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #82AAFF">fopen</span><span style="color: #F07178">(</span><span style="color: #EEFFFF">fileName</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">mode</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #C792EA">var</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">contentHello</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">Memory</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">allocUtf8String</span><span style="color: #F07178">(</span><span style="color: #EEFFFF">contents</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #C792EA">var</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">ret</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #82AAFF">fputs</span><span style="color: #F07178">(</span><span style="color: #EEFFFF">contentHello</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">fp</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #82AAFF">fclose</span><span style="color: #F07178">(</span><span style="color: #EEFFFF">fp</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #89DDFF">&#125;</span></div></code></div></pre>`,$l,ps,Os,Gn,ka,ws,Zn,ja,zl,Sp=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" python="true"><div class="language-id">python</div><div class='code-container'><code><div class='line'><span style="color: #546E7A"># loader.py</span></div><div class='line'><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> frida</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> time</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">device </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> frida</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">get_usb_device</span><span style="color: #89DDFF">()</span></div><div class='line'><span style="color: #EEFFFF">pid </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> device</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">spawn</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">com.symbolic.pitchlab</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">)</span><span style="color: #EEFFFF"> </span><span style="color: #546E7A">#目标包名</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">device</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">resume</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">pid</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">time</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">sleep</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">session </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> device</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">attach</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">pid</span><span style="color: #89DDFF">)</span></div><div class='line'></div><div class='line'><span style="color: #89DDFF">with</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">open</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">tty.js</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">)</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">as</span><span style="color: #EEFFFF"> f</span><span style="color: #89DDFF">:</span></div><div class='line'><span style="color: #EEFFFF">    script </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> session</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">create_script</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">f</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">read</span><span style="color: #89DDFF">())</span></div><div class='line'><span style="color: #EEFFFF">    script</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">load</span><span style="color: #89DDFF">()</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">while</span><span style="color: #89DDFF">(True):</span></div><div class='line'><span style="color: #EEFFFF">        script</span><span style="color: #89DDFF">.</span><span style="color: #F07178">exports</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">output_func</span><span style="color: #89DDFF">()</span><span style="color: #EEFFFF"> </span><span style="color: #546E7A">#js导出函数调用</span></div><div class='line'><span style="color: #EEFFFF">        time</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">sleep</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">0.5</span><span style="color: #89DDFF">)</span></div></code></div></pre>`,Wl,ql,Rp=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" javascript="true"><div class="language-id">javascript</div><div class='code-container'><code><div class='line'><span style="color: #546E7A">// tty.js</span></div><div class='line'><span style="color: #C792EA">function</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">hook_native</span><span style="color: #89DDFF">()</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #C792EA">var</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">result</span><span style="color: #89DDFF">;</span><span style="color: #F07178"> 	</span><span style="color: #546E7A">// 需要放在 perform 外面</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #EEFFFF">Java</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">perform</span><span style="color: #F07178">(</span><span style="color: #C792EA">function</span><span style="color: #F07178"> </span><span style="color: #89DDFF">()</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">        </span><span style="color: #C792EA">var</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">addr</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">Module</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">getExportByName</span><span style="color: #F07178">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">libPitchLab.so</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">Java_com_symbolic_pitchlab_PitchLabNative_processStreamedSamples</span><span style="color: #89DDFF">"</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span><span style="color: #F07178"> 	</span><span style="color: #546E7A">//目标库文件和函数</span></div><div class='line'><span style="color: #F07178">        </span><span style="color: #EEFFFF">Interceptor</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">attach</span><span style="color: #F07178">(</span><span style="color: #EEFFFF">addr</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">            </span><span style="color: #82AAFF">onEnter</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #C792EA">function</span><span style="color: #F07178"> </span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">args</span><span style="color: #89DDFF">)</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">                </span><span style="color: #89DDFF">for</span><span style="color: #F07178"> (</span><span style="color: #C792EA">let</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">index</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">;</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">index</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178"> </span><span style="color: #F78C6C">14</span><span style="color: #89DDFF">;</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">index</span><span style="color: #89DDFF">++</span><span style="color: #F07178">) </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">                    </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">element</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">args</span><span style="color: #F07178">[</span><span style="color: #EEFFFF">index</span><span style="color: #F07178">]</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">                    </span><span style="color: #EEFFFF">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">( </span><span style="color: #EEFFFF">element</span><span style="color: #F07178">)</span></div><div class='line'><span style="color: #F07178">                </span><span style="color: #89DDFF">&#125;</span></div><div class='line'><span style="color: #F07178">            </span><span style="color: #89DDFF">&#125;,</span></div><div class='line'><span style="color: #F07178">            </span><span style="color: #82AAFF">onLeave</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #C792EA">function</span><span style="color: #F07178"> </span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">retval</span><span style="color: #89DDFF">)</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #89DDFF">                </span><span style="color: #546E7A">//do something</span></div><div class='line'><span style="color: #F07178">            </span><span style="color: #89DDFF">&#125;</span></div><div class='line'><span style="color: #F07178">        </span><span style="color: #89DDFF">&#125;</span><span style="color: #F07178">)</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #89DDFF">&#125;</span><span style="color: #F07178">)</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #89DDFF">return</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">result</span></div><div class='line'><span style="color: #89DDFF">&#125;</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">rpc</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">exports </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #F07178">output_func</span><span style="color: #89DDFF">:</span><span style="color: #EEFFFF"> hook_native</span></div><div class='line'><span style="color: #89DDFF">&#125;</span></div></code></div></pre>`,Gl,Fs,Hs,Qn,xa,Zl,Vp=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">netstat -alpe</span></div><div class='line'><span style="color: #EEFFFF">lsof -p 8888 -l</span></div><div class='line'><span style="color: #EEFFFF">adb shell dumpsys activity top</span></div><div class='line'><span style="color: #EEFFFF">adb shell dumpsys package </span><span style="color: #89DDFF">&lt;</span><span style="color: #EEFFFF">package_name</span><span style="color: #89DDFF">&gt;</span></div><div class='line'><span style="color: #EEFFFF">adb shell dumpsys dbinfo </span><span style="color: #89DDFF">&lt;</span><span style="color: #EEFFFF">package_name</span><span style="color: #89DDFF">&gt;</span></div><div class='line'><span style="color: #EEFFFF">adb shell pm list packages</span></div><div class='line'><span style="color: #EEFFFF">adb shell am start-activity -D -N com.example.az/.MainActivity</span></div></code></div></pre>`,Ql;return{c(){D=o("h2"),v=o("a"),x=p("环境搭建"),H=c(),d=o("ul"),f=o("li"),cs=p("安装 node 和 npm，git 拉取 frida-agent-example 仓库"),Xa=c(),Ts=o("li"),Ja=p("下载版本对应的 frida、 frida-tools、 frida-server"),Ba=c(),Ss=o("li"),Ta=p("在手机的 data/local/tmp 下运行 frida-server"),Kl=c(),V=o("h2"),is=o("a"),Sa=p("Android 虚拟机搭建"),Yl=c(),$=o("h3"),ys=o("a"),Ra=p("环境配置"),sa=c(),P=o("ul"),Rs=o("li"),Va=p("VMware 下的 Linux 虚拟机，有完整 frida 环境"),$a=c(),Vs=o("li"),za=p("使用 Genymotion 的 Android x86_64 虚拟机"),la=c(),z=o("h3"),ds=o("a"),Wa=p("网络配置"),aa=c(),Ds=o("p"),qa=p("默认配置均为NAT ，需要全部更改为桥接:"),oa=c(),h=o("ul"),$s=o("li"),zs=o("p"),Ga=p("VMware 需要启用 复制物理地址"),Za=c(),Ws=o("li"),qs=o("p"),Qa=p("在 Genymotion 的设置中将网络状态改为桥接"),Ka=c(),Gs=o("li"),Zs=o("p"),Ya=p("在 VirtualBox 中将安卓虚拟机的网卡 2 改为桥接, 确认和 VMware 桥接至同一网卡，且将两个网卡的混杂模式改为全部允许"),na=c(),W=o("h3"),Es=o("a"),so=p("连接使用"),ea=c(),_=o("ul"),Qs=o("li"),q=o("p"),lo=p("在kali中使用 "),Ks=o("code"),ao=p("adb connnect <安卓虚拟机IP>"),oo=p(" 连接adb"),no=c(),Ys=o("li"),L=o("p"),eo=p("使用 "),sl=o("code"),po=p("adb push"),Fo=p("将对应的 frida-server 文件推到 "),ll=o("em"),to=p("/data/local/tmp"),ro=p(" 文件夹下并赋予权限，不知什么原因，这里的64位文件无法正常使用，但32位的没有问题"),co=c(),al=o("li"),G=o("p"),io=p("使用 "),ol=o("code"),yo=p("./frida-server-15.2.2-android-x86 -l 0.0.0.0:8888"),Do=p("启用网络模式连接"),Eo=c(),nl=o("li"),I=o("p"),vo=p("现在 "),el=o("code"),fo=p("frida-ps -H 192.168.0.232:8888 -a"),uo=p("就可以正常使用了， 还可以用"),pl=o("code"),_o=p("objection -N -h 192.168.0.232 -p 8888 -g com.android.settings explore"),Ao=p(" 使用 objection (192.168.0.232 是 Android IP)"),pa=c(),Z=o("h2"),vs=o("a"),mo=p("Hook Demo"),Fa=c(),fs=o("ul"),Fl=o("li"),ho=p("在 frida-agent-example 根目录下新建一个 hello.js 文件，代码如下："),ta=c(),tl=new S(!1),rl=c(),g=o("ul"),Q=o("li"),Co=p("在Android上启动 frida-server，添加 "),cl=o("code"),bo=p("-l 0.0.0.0:8888"),ko=p(" 可以启用网络监听"),jo=c(),K=o("li"),xo=p("使用 "),il=o("code"),Lo=p("frida -U -f com.android.settings -l hello.js"),Io=p(" 运行 ，这时点击设置中的显示选项就会打印Hook值（console.log 打印的值）"),ra=c(),us=o("blockquote"),yl=o("p"),Oo=p("-U 为 通过 USB 连接 、-f 为使用 spawn 模式"),ca=c(),Y=o("h2"),_s=o("a"),wo=p("常用插件"),ia=c(),N=o("ul"),m=o("li"),dl=o("code"),Ho=p("Objection"),Po=p("  ，使用pip安装，请注意安装顺序，先安装"),Dl=o("code"),go=p("frida"),No=p("和"),El=o("code"),Uo=p("frida-tools"),Mo=p("，再安装对应版本的"),vl=o("code"),Xo=p("Objection"),Jo=c(),O=o("li"),fl=o("code"),Bo=p("WallBreaker"),To=p(" , 和"),ul=o("code"),So=p("Objection"),Ro=p("一样是用于快速定位类中包含的属性和函数(内存枚举）"),U=o("a"),Vo=p("教程"),ya=c(),_l=new S(!1),Al=c(),C=o("ul"),b=o("li"),ml=o("code"),$o=p("Zentrace"),zo=p(" 需要先安装 "),hl=o("code"),Wo=p("PyQt5"),qo=p(" 和 "),Cl=o("code"),Go=p("frida"),Zo=p("，用于关键类定位（ Trace 枚举）"),Qo=c(),As=o("li"),bl=o("code"),Ko=p("dexdump"),Yo=p(" 用于一代整体加固"),sn=c(),ms=o("li"),kl=o("code"),ln=p("frida_fart (FART)"),an=p(" 用于二代抽取加壳"),da=c(),ss=o("h2"),hs=o("a"),on=p("Native 层 Hook"),Da=c(),jl=new S(!1),xl=c(),k=o("ul"),Cs=o("li"),nn=p("目的是寻找 Java 层函数在 native 层中的对应"),Ll=o("strong"),en=p("地址"),pn=c(),u=o("li"),Fn=p("在 "),Il=o("code"),tn=p("Objection"),rn=p(" 中执行 "),Ol=o("code"),cn=p("memory list modules"),yn=p("查看你内存中的 "),wl=o("code"),dn=p(".so "),Dn=p("文件，使用 "),Hl=o("code"),En=p("--json output.json"),vn=p(" 来导出"),fn=c(),E=o("li"),un=p("执行"),Pl=o("code"),_n=p("memory list exports XXX.so"),An=p("  查看相应文件导出的所有符号，可以找到函数名对应的地址，但这里的绝对地址在每次加载时都不同，不变的是函数地址相对于基地址的偏移，通过偏移可以在静态分析时找到对应函数，使用 "),gl=o("code"),mn=p("--json output.json"),hn=p(" 来导出(如果在Java层函数编写时未添加"),Nl=o("code"),Cn=p("extern C"),bn=p(" 描述符，会因为 C++ 的 "),Ul=o("code"),kn=p("name mangling"),jn=p(" 导致编译完成的函数名发生一些变化，被破坏的函数名可以使用"),Ml=o("code"),xn=p("C++filt"),Ln=p("工具恢复)"),Ea=c(),ls=o("h3"),bs=o("a"),In=p("native层导数"),va=c(),ks=o("p"),On=p("使用Frida提供的 API 获得函数首地址："),fa=c(),Xl=new S(!1),Jl=c(),as=o("h3"),js=o("a"),wn=p("非native层导出函数（使用动态注册的JNI函数）"),ua=c(),xs=o("p"),Hn=p("通过获得模块地址相对于基地址的偏移来确定函数的绝对地址"),_a=c(),M=o("ul"),w=o("li"),Pn=p("项目 [frida_hook_libart]("),X=o("a"),gn=p("lasting-yang/frida_hook_libart: Frida hook some jni functions (github.com)"),Nn=p(") 包含JNI函数和 art 函数的Hook 脚本,使用其中的 "),Bl=o("code"),Un=p("hook_RegisterNatives.js"),Mn=p(",可以获得偏移"),Xn=c(),os=o("li"),Jn=p("在获得偏移后使用frida提供的api "),Tl=o("code"),Bn=p("Module.findBaseAddress"),Tn=p(" 获得函数地址并进行Hook"),Aa=c(),ns=o("h3"),Ls=o("a"),Sn=p("lib库的Hook"),ma=c(),J=o("p"),Rn=p("使用 "),Sl=o("code"),Vn=p("memory list exports XXX.so --json ./output.json"),$n=p(" 导出模块中的导出函数"),ha=c(),es=o("p"),zn=p("使用 frida-trace 可以快速trace函数 "),Rl=o("code"),Wn=p("frida-trace -UF -I libXXX.so"),Ca=c(),Is=o("p"),qn=p("使用 Frida 写文件"),ba=c(),Vl=new S(!1),$l=c(),ps=o("h2"),Os=o("a"),Gn=p("主动调用、RPC入门"),ka=c(),ws=o("p"),Zn=p("RPC 指通过网络从远程计算机程序上请求服务, 需要将js脚本进行处理，使其被python程序调用，便于使用。例："),ja=c(),zl=new S(!1),Wl=c(),ql=new S(!1),Gl=c(),Fs=o("h2"),Hs=o("a"),Qn=p("adb 命令拾遗"),xa=c(),Zl=new S(!1),Ql=Np(),this.h()},l(s){D=n(s,"H2",{id:!0});var t=e(D);v=n(t,"A",{href:!0});var oe=e(v);x=F(oe,"环境搭建"),oe.forEach(a),t.forEach(a),H=i(s),d=n(s,"UL",{});var Ps=e(d);f=n(Ps,"LI",{});var ne=e(f);cs=F(ne,"安装 node 和 npm，git 拉取 frida-agent-example 仓库"),ne.forEach(a),Xa=i(Ps),Ts=n(Ps,"LI",{});var ee=e(Ts);Ja=F(ee,"下载版本对应的 frida、 frida-tools、 frida-server"),ee.forEach(a),Ba=i(Ps),Ss=n(Ps,"LI",{});var pe=e(Ss);Ta=F(pe,"在手机的 data/local/tmp 下运行 frida-server"),pe.forEach(a),Ps.forEach(a),Kl=i(s),V=n(s,"H2",{id:!0});var Fe=e(V);is=n(Fe,"A",{href:!0});var te=e(is);Sa=F(te,"Android 虚拟机搭建"),te.forEach(a),Fe.forEach(a),Yl=i(s),$=n(s,"H3",{id:!0});var re=e($);ys=n(re,"A",{href:!0});var ce=e(ys);Ra=F(ce,"环境配置"),ce.forEach(a),re.forEach(a),sa=i(s),P=n(s,"UL",{});var La=e(P);Rs=n(La,"LI",{});var ie=e(Rs);Va=F(ie,"VMware 下的 Linux 虚拟机，有完整 frida 环境"),ie.forEach(a),$a=i(La),Vs=n(La,"LI",{});var ye=e(Vs);za=F(ye,"使用 Genymotion 的 Android x86_64 虚拟机"),ye.forEach(a),La.forEach(a),la=i(s),z=n(s,"H3",{id:!0});var de=e(z);ds=n(de,"A",{href:!0});var De=e(ds);Wa=F(De,"网络配置"),De.forEach(a),de.forEach(a),aa=i(s),Ds=n(s,"P",{});var Ee=e(Ds);qa=F(Ee,"默认配置均为NAT ，需要全部更改为桥接:"),Ee.forEach(a),oa=i(s),h=n(s,"UL",{});var gs=e(h);$s=n(gs,"LI",{});var ve=e($s);zs=n(ve,"P",{});var fe=e(zs);Ga=F(fe,"VMware 需要启用 复制物理地址"),fe.forEach(a),ve.forEach(a),Za=i(gs),Ws=n(gs,"LI",{});var ue=e(Ws);qs=n(ue,"P",{});var _e=e(qs);Qa=F(_e,"在 Genymotion 的设置中将网络状态改为桥接"),_e.forEach(a),ue.forEach(a),Ka=i(gs),Gs=n(gs,"LI",{});var Ae=e(Gs);Zs=n(Ae,"P",{});var me=e(Zs);Ya=F(me,"在 VirtualBox 中将安卓虚拟机的网卡 2 改为桥接, 确认和 VMware 桥接至同一网卡，且将两个网卡的混杂模式改为全部允许"),me.forEach(a),Ae.forEach(a),gs.forEach(a),na=i(s),W=n(s,"H3",{id:!0});var he=e(W);Es=n(he,"A",{href:!0});var Ce=e(Es);so=F(Ce,"连接使用"),Ce.forEach(a),he.forEach(a),ea=i(s),_=n(s,"UL",{});var B=e(_);Qs=n(B,"LI",{});var be=e(Qs);q=n(be,"P",{});var Ia=e(q);lo=F(Ia,"在kali中使用 "),Ks=n(Ia,"CODE",{});var ke=e(Ks);ao=F(ke,"adb connnect <安卓虚拟机IP>"),ke.forEach(a),oo=F(Ia," 连接adb"),Ia.forEach(a),be.forEach(a),no=i(B),Ys=n(B,"LI",{});var je=e(Ys);L=n(je,"P",{});var Ns=e(L);eo=F(Ns,"使用 "),sl=n(Ns,"CODE",{});var xe=e(sl);po=F(xe,"adb push"),xe.forEach(a),Fo=F(Ns,"将对应的 frida-server 文件推到 "),ll=n(Ns,"EM",{});var Le=e(ll);to=F(Le,"/data/local/tmp"),Le.forEach(a),ro=F(Ns," 文件夹下并赋予权限，不知什么原因，这里的64位文件无法正常使用，但32位的没有问题"),Ns.forEach(a),je.forEach(a),co=i(B),al=n(B,"LI",{});var Ie=e(al);G=n(Ie,"P",{});var Oa=e(G);io=F(Oa,"使用 "),ol=n(Oa,"CODE",{});var Oe=e(ol);yo=F(Oe,"./frida-server-15.2.2-android-x86 -l 0.0.0.0:8888"),Oe.forEach(a),Do=F(Oa,"启用网络模式连接"),Oa.forEach(a),Ie.forEach(a),Eo=i(B),nl=n(B,"LI",{});var we=e(nl);I=n(we,"P",{});var Us=e(I);vo=F(Us,"现在 "),el=n(Us,"CODE",{});var He=e(el);fo=F(He,"frida-ps -H 192.168.0.232:8888 -a"),He.forEach(a),uo=F(Us,"就可以正常使用了， 还可以用"),pl=n(Us,"CODE",{});var Pe=e(pl);_o=F(Pe,"objection -N -h 192.168.0.232 -p 8888 -g com.android.settings explore"),Pe.forEach(a),Ao=F(Us," 使用 objection (192.168.0.232 是 Android IP)"),Us.forEach(a),we.forEach(a),B.forEach(a),pa=i(s),Z=n(s,"H2",{id:!0});var ge=e(Z);vs=n(ge,"A",{href:!0});var Ne=e(vs);mo=F(Ne,"Hook Demo"),Ne.forEach(a),ge.forEach(a),Fa=i(s),fs=n(s,"UL",{});var Ue=e(fs);Fl=n(Ue,"LI",{});var Me=e(Fl);ho=F(Me,"在 frida-agent-example 根目录下新建一个 hello.js 文件，代码如下："),Me.forEach(a),Ue.forEach(a),ta=i(s),tl=R(s,!1),rl=i(s),g=n(s,"UL",{});var wa=e(g);Q=n(wa,"LI",{});var Ha=e(Q);Co=F(Ha,"在Android上启动 frida-server，添加 "),cl=n(Ha,"CODE",{});var Xe=e(cl);bo=F(Xe,"-l 0.0.0.0:8888"),Xe.forEach(a),ko=F(Ha," 可以启用网络监听"),Ha.forEach(a),jo=i(wa),K=n(wa,"LI",{});var Pa=e(K);xo=F(Pa,"使用 "),il=n(Pa,"CODE",{});var Je=e(il);Lo=F(Je,"frida -U -f com.android.settings -l hello.js"),Je.forEach(a),Io=F(Pa," 运行 ，这时点击设置中的显示选项就会打印Hook值（console.log 打印的值）"),Pa.forEach(a),wa.forEach(a),ra=i(s),us=n(s,"BLOCKQUOTE",{});var Be=e(us);yl=n(Be,"P",{});var Te=e(yl);Oo=F(Te,"-U 为 通过 USB 连接 、-f 为使用 spawn 模式"),Te.forEach(a),Be.forEach(a),ca=i(s),Y=n(s,"H2",{id:!0});var Se=e(Y);_s=n(Se,"A",{href:!0});var Re=e(_s);wo=F(Re,"常用插件"),Re.forEach(a),Se.forEach(a),ia=i(s),N=n(s,"UL",{});var ga=e(N);m=n(ga,"LI",{});var T=e(m);dl=n(T,"CODE",{});var Ve=e(dl);Ho=F(Ve,"Objection"),Ve.forEach(a),Po=F(T,"  ，使用pip安装，请注意安装顺序，先安装"),Dl=n(T,"CODE",{});var $e=e(Dl);go=F($e,"frida"),$e.forEach(a),No=F(T,"和"),El=n(T,"CODE",{});var ze=e(El);Uo=F(ze,"frida-tools"),ze.forEach(a),Mo=F(T,"，再安装对应版本的"),vl=n(T,"CODE",{});var We=e(vl);Xo=F(We,"Objection"),We.forEach(a),T.forEach(a),Jo=i(ga),O=n(ga,"LI",{});var Ms=e(O);fl=n(Ms,"CODE",{});var qe=e(fl);Bo=F(qe,"WallBreaker"),qe.forEach(a),To=F(Ms," , 和"),ul=n(Ms,"CODE",{});var Ge=e(ul);So=F(Ge,"Objection"),Ge.forEach(a),Ro=F(Ms,"一样是用于快速定位类中包含的属性和函数(内存枚举）"),U=n(Ms,"A",{href:!0,rel:!0,target:!0});var Ze=e(U);Vo=F(Ze,"教程"),Ze.forEach(a),Ms.forEach(a),ga.forEach(a),ya=i(s),_l=R(s,!1),Al=i(s),C=n(s,"UL",{});var Xs=e(C);b=n(Xs,"LI",{});var ts=e(b);ml=n(ts,"CODE",{});var Qe=e(ml);$o=F(Qe,"Zentrace"),Qe.forEach(a),zo=F(ts," 需要先安装 "),hl=n(ts,"CODE",{});var Ke=e(hl);Wo=F(Ke,"PyQt5"),Ke.forEach(a),qo=F(ts," 和 "),Cl=n(ts,"CODE",{});var Ye=e(Cl);Go=F(Ye,"frida"),Ye.forEach(a),Zo=F(ts,"，用于关键类定位（ Trace 枚举）"),ts.forEach(a),Qo=i(Xs),As=n(Xs,"LI",{});var Kn=e(As);bl=n(Kn,"CODE",{});var sp=e(bl);Ko=F(sp,"dexdump"),sp.forEach(a),Yo=F(Kn," 用于一代整体加固"),Kn.forEach(a),sn=i(Xs),ms=n(Xs,"LI",{});var Yn=e(ms);kl=n(Yn,"CODE",{});var lp=e(kl);ln=F(lp,"frida_fart (FART)"),lp.forEach(a),an=F(Yn," 用于二代抽取加壳"),Yn.forEach(a),Xs.forEach(a),da=i(s),ss=n(s,"H2",{id:!0});var ap=e(ss);hs=n(ap,"A",{href:!0});var op=e(hs);on=F(op,"Native 层 Hook"),op.forEach(a),ap.forEach(a),Da=i(s),jl=R(s,!1),xl=i(s),k=n(s,"UL",{});var Js=e(k);Cs=n(Js,"LI",{});var se=e(Cs);nn=F(se,"目的是寻找 Java 层函数在 native 层中的对应"),Ll=n(se,"STRONG",{});var np=e(Ll);en=F(np,"地址"),np.forEach(a),se.forEach(a),pn=i(Js),u=n(Js,"LI",{});var j=e(u);Fn=F(j,"在 "),Il=n(j,"CODE",{});var ep=e(Il);tn=F(ep,"Objection"),ep.forEach(a),rn=F(j," 中执行 "),Ol=n(j,"CODE",{});var pp=e(Ol);cn=F(pp,"memory list modules"),pp.forEach(a),yn=F(j,"查看你内存中的 "),wl=n(j,"CODE",{});var Fp=e(wl);dn=F(Fp,".so "),Fp.forEach(a),Dn=F(j,"文件，使用 "),Hl=n(j,"CODE",{});var tp=e(Hl);En=F(tp,"--json output.json"),tp.forEach(a),vn=F(j," 来导出"),j.forEach(a),fn=i(Js),E=n(Js,"LI",{});var A=e(E);un=F(A,"执行"),Pl=n(A,"CODE",{});var rp=e(Pl);_n=F(rp,"memory list exports XXX.so"),rp.forEach(a),An=F(A,"  查看相应文件导出的所有符号，可以找到函数名对应的地址，但这里的绝对地址在每次加载时都不同，不变的是函数地址相对于基地址的偏移，通过偏移可以在静态分析时找到对应函数，使用 "),gl=n(A,"CODE",{});var cp=e(gl);mn=F(cp,"--json output.json"),cp.forEach(a),hn=F(A," 来导出(如果在Java层函数编写时未添加"),Nl=n(A,"CODE",{});var ip=e(Nl);Cn=F(ip,"extern C"),ip.forEach(a),bn=F(A," 描述符，会因为 C++ 的 "),Ul=n(A,"CODE",{});var yp=e(Ul);kn=F(yp,"name mangling"),yp.forEach(a),jn=F(A," 导致编译完成的函数名发生一些变化，被破坏的函数名可以使用"),Ml=n(A,"CODE",{});var dp=e(Ml);xn=F(dp,"C++filt"),dp.forEach(a),Ln=F(A,"工具恢复)"),A.forEach(a),Js.forEach(a),Ea=i(s),ls=n(s,"H3",{id:!0});var Dp=e(ls);bs=n(Dp,"A",{href:!0});var Ep=e(bs);In=F(Ep,"native层导数"),Ep.forEach(a),Dp.forEach(a),va=i(s),ks=n(s,"P",{});var vp=e(ks);On=F(vp,"使用Frida提供的 API 获得函数首地址："),vp.forEach(a),fa=i(s),Xl=R(s,!1),Jl=i(s),as=n(s,"H3",{id:!0});var fp=e(as);js=n(fp,"A",{href:!0});var up=e(js);wn=F(up,"非native层导出函数（使用动态注册的JNI函数）"),up.forEach(a),fp.forEach(a),ua=i(s),xs=n(s,"P",{});var _p=e(xs);Hn=F(_p,"通过获得模块地址相对于基地址的偏移来确定函数的绝对地址"),_p.forEach(a),_a=i(s),M=n(s,"UL",{});var Na=e(M);w=n(Na,"LI",{});var Bs=e(w);Pn=F(Bs,"项目 [frida_hook_libart]("),X=n(Bs,"A",{href:!0,rel:!0,target:!0});var Ap=e(X);gn=F(Ap,"lasting-yang/frida_hook_libart: Frida hook some jni functions (github.com)"),Ap.forEach(a),Nn=F(Bs,") 包含JNI函数和 art 函数的Hook 脚本,使用其中的 "),Bl=n(Bs,"CODE",{});var mp=e(Bl);Un=F(mp,"hook_RegisterNatives.js"),mp.forEach(a),Mn=F(Bs,",可以获得偏移"),Bs.forEach(a),Xn=i(Na),os=n(Na,"LI",{});var Ua=e(os);Jn=F(Ua,"在获得偏移后使用frida提供的api "),Tl=n(Ua,"CODE",{});var hp=e(Tl);Bn=F(hp,"Module.findBaseAddress"),hp.forEach(a),Tn=F(Ua," 获得函数地址并进行Hook"),Ua.forEach(a),Na.forEach(a),Aa=i(s),ns=n(s,"H3",{id:!0});var Cp=e(ns);Ls=n(Cp,"A",{href:!0});var bp=e(Ls);Sn=F(bp,"lib库的Hook"),bp.forEach(a),Cp.forEach(a),ma=i(s),J=n(s,"P",{});var Ma=e(J);Rn=F(Ma,"使用 "),Sl=n(Ma,"CODE",{});var kp=e(Sl);Vn=F(kp,"memory list exports XXX.so --json ./output.json"),kp.forEach(a),$n=F(Ma," 导出模块中的导出函数"),Ma.forEach(a),ha=i(s),es=n(s,"P",{});var le=e(es);zn=F(le,"使用 frida-trace 可以快速trace函数 "),Rl=n(le,"CODE",{});var jp=e(Rl);Wn=F(jp,"frida-trace -UF -I libXXX.so"),jp.forEach(a),le.forEach(a),Ca=i(s),Is=n(s,"P",{});var xp=e(Is);qn=F(xp,"使用 Frida 写文件"),xp.forEach(a),ba=i(s),Vl=R(s,!1),$l=i(s),ps=n(s,"H2",{id:!0});var Lp=e(ps);Os=n(Lp,"A",{href:!0});var Ip=e(Os);Gn=F(Ip,"主动调用、RPC入门"),Ip.forEach(a),Lp.forEach(a),ka=i(s),ws=n(s,"P",{});var Op=e(ws);Zn=F(Op,"RPC 指通过网络从远程计算机程序上请求服务, 需要将js脚本进行处理，使其被python程序调用，便于使用。例："),Op.forEach(a),ja=i(s),zl=R(s,!1),Wl=i(s),ql=R(s,!1),Gl=i(s),Fs=n(s,"H2",{id:!0});var wp=e(Fs);Hs=n(wp,"A",{href:!0});var Hp=e(Hs);Qn=F(Hp,"adb 命令拾遗"),Hp.forEach(a),wp.forEach(a),xa=i(s),Zl=R(s,!1),Ql=Np(),this.h()},h(){y(v,"href","#环境搭建"),y(D,"id","环境搭建"),y(is,"href","#android-虚拟机搭建"),y(V,"id","android-虚拟机搭建"),y(ys,"href","#环境配置"),y($,"id","环境配置"),y(ds,"href","#网络配置"),y(z,"id","网络配置"),y(Es,"href","#连接使用"),y(W,"id","连接使用"),y(vs,"href","#hook-demo"),y(Z,"id","hook-demo"),tl.a=rl,y(_s,"href","#常用插件"),y(Y,"id","常用插件"),y(U,"href","https://bbs.kanxue.com/thread-277929.htm"),y(U,"rel","nofollow noopener noreferrer external"),y(U,"target","_blank"),_l.a=Al,y(hs,"href","#native-层-hook"),y(ss,"id","native-层-hook"),jl.a=xl,y(bs,"href","#native层导数"),y(ls,"id","native层导数"),Xl.a=Jl,y(js,"href","#非native层导出函数使用动态注册的jni函数"),y(as,"id","非native层导出函数使用动态注册的jni函数"),y(X,"href","https://github.com/lasting-yang/frida_hook_libart"),y(X,"rel","nofollow noopener noreferrer external"),y(X,"target","_blank"),y(Ls,"href","#lib库的hook"),y(ns,"id","lib库的hook"),Vl.a=$l,y(Os,"href","#主动调用rpc入门"),y(ps,"id","主动调用rpc入门"),zl.a=Wl,ql.a=Gl,y(Hs,"href","#adb-命令拾遗"),y(Fs,"id","adb-命令拾遗"),Zl.a=Ql},m(s,t){r(s,D,t),l(D,v),l(v,x),r(s,H,t),r(s,d,t),l(d,f),l(f,cs),l(d,Xa),l(d,Ts),l(Ts,Ja),l(d,Ba),l(d,Ss),l(Ss,Ta),r(s,Kl,t),r(s,V,t),l(V,is),l(is,Sa),r(s,Yl,t),r(s,$,t),l($,ys),l(ys,Ra),r(s,sa,t),r(s,P,t),l(P,Rs),l(Rs,Va),l(P,$a),l(P,Vs),l(Vs,za),r(s,la,t),r(s,z,t),l(z,ds),l(ds,Wa),r(s,aa,t),r(s,Ds,t),l(Ds,qa),r(s,oa,t),r(s,h,t),l(h,$s),l($s,zs),l(zs,Ga),l(h,Za),l(h,Ws),l(Ws,qs),l(qs,Qa),l(h,Ka),l(h,Gs),l(Gs,Zs),l(Zs,Ya),r(s,na,t),r(s,W,t),l(W,Es),l(Es,so),r(s,ea,t),r(s,_,t),l(_,Qs),l(Qs,q),l(q,lo),l(q,Ks),l(Ks,ao),l(q,oo),l(_,no),l(_,Ys),l(Ys,L),l(L,eo),l(L,sl),l(sl,po),l(L,Fo),l(L,ll),l(ll,to),l(L,ro),l(_,co),l(_,al),l(al,G),l(G,io),l(G,ol),l(ol,yo),l(G,Do),l(_,Eo),l(_,nl),l(nl,I),l(I,vo),l(I,el),l(el,fo),l(I,uo),l(I,pl),l(pl,_o),l(I,Ao),r(s,pa,t),r(s,Z,t),l(Z,vs),l(vs,mo),r(s,Fa,t),r(s,fs,t),l(fs,Fl),l(Fl,ho),r(s,ta,t),tl.m(Mp,s,t),r(s,rl,t),r(s,g,t),l(g,Q),l(Q,Co),l(Q,cl),l(cl,bo),l(Q,ko),l(g,jo),l(g,K),l(K,xo),l(K,il),l(il,Lo),l(K,Io),r(s,ra,t),r(s,us,t),l(us,yl),l(yl,Oo),r(s,ca,t),r(s,Y,t),l(Y,_s),l(_s,wo),r(s,ia,t),r(s,N,t),l(N,m),l(m,dl),l(dl,Ho),l(m,Po),l(m,Dl),l(Dl,go),l(m,No),l(m,El),l(El,Uo),l(m,Mo),l(m,vl),l(vl,Xo),l(N,Jo),l(N,O),l(O,fl),l(fl,Bo),l(O,To),l(O,ul),l(ul,So),l(O,Ro),l(O,U),l(U,Vo),r(s,ya,t),_l.m(Xp,s,t),r(s,Al,t),r(s,C,t),l(C,b),l(b,ml),l(ml,$o),l(b,zo),l(b,hl),l(hl,Wo),l(b,qo),l(b,Cl),l(Cl,Go),l(b,Zo),l(C,Qo),l(C,As),l(As,bl),l(bl,Ko),l(As,Yo),l(C,sn),l(C,ms),l(ms,kl),l(kl,ln),l(ms,an),r(s,da,t),r(s,ss,t),l(ss,hs),l(hs,on),r(s,Da,t),jl.m(Jp,s,t),r(s,xl,t),r(s,k,t),l(k,Cs),l(Cs,nn),l(Cs,Ll),l(Ll,en),l(k,pn),l(k,u),l(u,Fn),l(u,Il),l(Il,tn),l(u,rn),l(u,Ol),l(Ol,cn),l(u,yn),l(u,wl),l(wl,dn),l(u,Dn),l(u,Hl),l(Hl,En),l(u,vn),l(k,fn),l(k,E),l(E,un),l(E,Pl),l(Pl,_n),l(E,An),l(E,gl),l(gl,mn),l(E,hn),l(E,Nl),l(Nl,Cn),l(E,bn),l(E,Ul),l(Ul,kn),l(E,jn),l(E,Ml),l(Ml,xn),l(E,Ln),r(s,Ea,t),r(s,ls,t),l(ls,bs),l(bs,In),r(s,va,t),r(s,ks,t),l(ks,On),r(s,fa,t),Xl.m(Bp,s,t),r(s,Jl,t),r(s,as,t),l(as,js),l(js,wn),r(s,ua,t),r(s,xs,t),l(xs,Hn),r(s,_a,t),r(s,M,t),l(M,w),l(w,Pn),l(w,X),l(X,gn),l(w,Nn),l(w,Bl),l(Bl,Un),l(w,Mn),l(M,Xn),l(M,os),l(os,Jn),l(os,Tl),l(Tl,Bn),l(os,Tn),r(s,Aa,t),r(s,ns,t),l(ns,Ls),l(Ls,Sn),r(s,ma,t),r(s,J,t),l(J,Rn),l(J,Sl),l(Sl,Vn),l(J,$n),r(s,ha,t),r(s,es,t),l(es,zn),l(es,Rl),l(Rl,Wn),r(s,Ca,t),r(s,Is,t),l(Is,qn),r(s,ba,t),Vl.m(Tp,s,t),r(s,$l,t),r(s,ps,t),l(ps,Os),l(Os,Gn),r(s,ka,t),r(s,ws,t),l(ws,Zn),r(s,ja,t),zl.m(Sp,s,t),r(s,Wl,t),ql.m(Rp,s,t),r(s,Gl,t),r(s,Fs,t),l(Fs,Hs),l(Hs,Qn),r(s,xa,t),Zl.m(Vp,s,t),r(s,Ql,t)},p:lF,d(s){s&&a(D),s&&a(H),s&&a(d),s&&a(Kl),s&&a(V),s&&a(Yl),s&&a($),s&&a(sa),s&&a(P),s&&a(la),s&&a(z),s&&a(aa),s&&a(Ds),s&&a(oa),s&&a(h),s&&a(na),s&&a(W),s&&a(ea),s&&a(_),s&&a(pa),s&&a(Z),s&&a(Fa),s&&a(fs),s&&a(ta),s&&tl.d(),s&&a(rl),s&&a(g),s&&a(ra),s&&a(us),s&&a(ca),s&&a(Y),s&&a(ia),s&&a(N),s&&a(ya),s&&_l.d(),s&&a(Al),s&&a(C),s&&a(da),s&&a(ss),s&&a(Da),s&&jl.d(),s&&a(xl),s&&a(k),s&&a(Ea),s&&a(ls),s&&a(va),s&&a(ks),s&&a(fa),s&&Xl.d(),s&&a(Jl),s&&a(as),s&&a(ua),s&&a(xs),s&&a(_a),s&&a(M),s&&a(Aa),s&&a(ns),s&&a(ma),s&&a(J),s&&a(ha),s&&a(es),s&&a(Ca),s&&a(Is),s&&a(ba),s&&Vl.d(),s&&a($l),s&&a(ps),s&&a(ka),s&&a(ws),s&&a(ja),s&&zl.d(),s&&a(Wl),s&&ql.d(),s&&a(Gl),s&&a(Fs),s&&a(xa),s&&a(Ql),s&&Zl.d()}}}function nF(rs){let D,v;const x=[rs[0],Up];let H={$$slots:{default:[oF]},$$scope:{ctx:rs}};for(let d=0;d<x.length;d+=1)H=ae(H,x[d]);return D=new aF({props:H}),{c(){qp(D.$$.fragment)},l(d){Gp(D.$$.fragment,d)},m(d,f){Zp(D,d,f),v=!0},p(d,[f]){const cs=f&1?Qp(x,[f&1&&Pp(d[0]),f&0&&Pp(Up)]):{};f&2&&(cs.$$scope={dirty:f,ctx:d}),D.$set(cs)},i(d){v||(Kp(D.$$.fragment,d),v=!0)},o(d){Yp(D.$$.fragment,d),v=!1},d(d){sF(D,d)}}}const Up={title:"Frida 学习笔记",alt:"Az",created:"2023-11-06T00:00:00.000Z",updated:"2023-11-06T00:00:00.000Z",tags:["frida"],images:[],slug:"/20231106/+page.svelte.md",path:"/20231106",toc:[{depth:2,title:"环境搭建",slug:"环境搭建"},{depth:2,title:"Android 虚拟机搭建",slug:"android-虚拟机搭建"},{depth:3,title:"环境配置",slug:"环境配置"},{depth:3,title:"网络配置",slug:"网络配置"},{depth:3,title:"连接使用",slug:"连接使用"},{depth:2,title:"Hook Demo",slug:"hook-demo"},{depth:2,title:"常用插件",slug:"常用插件"},{depth:2,title:"Native 层 Hook",slug:"native-层-hook"},{depth:3,title:"native层导数",slug:"native层导数"},{depth:3,title:"非native层导出函数（使用动态注册的JNI函数）",slug:"非native层导出函数使用动态注册的jni函数"},{depth:3,title:"lib库的Hook",slug:"lib库的hook"},{depth:2,title:"主动调用、RPC入门",slug:"主动调用rpc入门"},{depth:2,title:"adb 命令拾遗",slug:"adb-命令拾遗"}]};function eF(rs,D,v){return rs.$$set=x=>{v(0,D=ae(ae({},D),gp(x)))},D=gp(D),[D]}class tF extends $p{constructor(D){super(),zp(this,D,eF,nF,Wp,{})}}export{tF as component};
