import{S as wl,i as Bl,s as Nl,U as ll,y as Vl,z as $l,A as ql,V as Ul,W as Hl,g as Gl,d as jl,B as Yl,X as Rl,k as s,q as f,a as p,Y as De,l as i,m as o,r as d,h as l,c as F,Z as ye,n as E,b as r,D as t,E as Zl}from"../chunks/index.c6996e9d.js";import{P as Wl}from"../chunks/post_layout.338b5658.js";function Ql(x){let c,v,D,y,n,_,z,Se,C,S,Ae,Le,Me,j,Ie,ne,M,k,Pe,fe,u,Y,Te,Oe,Z,He,Re,W,be,xe,Q,ze,Ce,X,ke,de,I,w,we,ce,P,B,Be,pe,m,Ne,J,Ve,$e,qe,Ue,K,Ge,je,Fe,T,N,Ye,Ee,g,xl=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" md="true"><div class="language-id">md</div><div class='code-container'><code><div class='line'><span style="color: #89DDFF">1.</span><span style="color: #EEFFFF"> 搜索 psram</span></div><div class='line'><span style="color: #89DDFF">2.</span><span style="color: #EEFFFF"> 选择 SPIRAM_MODE_OCT(=y) "Octal Mode PSRAM"</span></div><div class='line'><span style="color: #89DDFF">3.</span><span style="color: #EEFFFF"> 进入 Octal Mode PSRAM</span></div><div class='line'><span style="color: #89DDFF">4.</span><span style="color: #EEFFFF"> 进入 Set RAM clock speed</span></div><div class='line'><span style="color: #89DDFF">5.</span><span style="color: #EEFFFF"> 选择 120MHz clock speed</span></div></code></div></pre>`,ee,O,V,Ze,ue,le,zl=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" md="true"><div class="language-id">md</div><div class='code-container'><code><div class='line'><span style="color: #89DDFF">1.</span><span style="color: #EEFFFF"> 搜索 flash</span></div><div class='line'><span style="color: #89DDFF">2.</span><span style="color: #EEFFFF"> 选择 ESPTOOLPY_FLASHFREQ_120M(=n) "120MHz"</span></div><div class='line'><span style="color: #89DDFF">3.</span><span style="color: #EEFFFF"> 选择 120MHz</span></div></code></div></pre>`,te,H,$,We,ve,ae,Cl=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" md="true"><div class="language-id">md</div><div class='code-container'><code><div class='line'><span style="color: #89DDFF">1.</span><span style="color: #EEFFFF"> 搜索 data cache line</span></div><div class='line'><span style="color: #89DDFF">2.</span><span style="color: #EEFFFF"> 选择 ESP_32S3_DATA_CACHE_LINE_64B(=n) "64 Bytes"</span></div><div class='line'><span style="color: #89DDFF">3.</span><span style="color: #EEFFFF"> 选择 64Bytes</span></div></code></div></pre>`,se,R,q,Qe,_e,ie,kl=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" md="true"><div class="language-id">md</div><div class='code-container'><code><div class='line'><span style="color: #89DDFF">1.</span><span style="color: #EEFFFF"> 搜索 avoid tearing effect</span></div><div class='line'><span style="color: #89DDFF">2.</span><span style="color: #EEFFFF"> 进入 BSP_DISPLAY_LVGL_AVOID_TEAR(=n) "Avoid tearing effect"</span></div><div class='line'><span style="color: #89DDFF">3.</span><span style="color: #EEFFFF"> 选择 Avoid tearing effect (NEW),进入 LCD</span></div><div class='line'><span style="color: #89DDFF">4.</span><span style="color: #EEFFFF"> 开启 Enable to use double frame buffers 以及 Enable to refresh LCD manually</span></div><div class='line'><span style="color: #89DDFF">5.</span><span style="color: #EEFFFF"> 进入 Display， 开启 Avoid tearing effect</span></div><div class='line'><span style="color: #89DDFF">6.</span><span style="color: #EEFFFF"> 进入 Select LVGL buffer mode，开启 Direct mode</span></div></code></div></pre>`,oe,b,U,Xe,me,A,Je,re,Ke,ge;return{c(){c=s("h2"),v=s("a"),D=f("环境需求"),y=p(),n=s("ul"),_=s("li"),z=f("ESP32-S3-LCD-EV-BOARD"),Se=p(),C=s("li"),S=s("a"),Ae=f("SquareLine Stdio"),Le=f(" v1.3.1"),Me=p(),j=s("li"),Ie=f("ESP-IDF v5.0.2"),ne=p(),M=s("h2"),k=s("a"),Pe=f("创建项目"),fe=p(),u=s("ol"),Y=s("li"),Te=f("在 SquareLine Stdio 的欢迎菜单中选择 Example，选择任意一个示例项目，点击 creat，待相关文件加载完毕"),Oe=p(),Z=s("li"),He=f("打开 flie 选项卡的 Project setting 修改 BOARD GROUP 为 Espressif，选择 开发板型号并保存"),Re=p(),W=s("li"),be=f("在 Font Manager 选项卡的 CREATFONT 下进行 modify 以防报错"),xe=p(),Q=s("li"),ze=f("在 Inspector 选项卡的 STYLE(MAIN) 下 确定项目的 Text Font，以便稍后修改"),Ce=p(),X=s("li"),ke=f("在 Export 选项卡中导出项目，先 Creat Template project 然后再 Export UI Files"),de=p(),I=s("h2"),w=s("a"),we=f("修改 Menuconfig"),ce=p(),P=s("h3"),B=s("a"),Be=f("修改字体"),pe=p(),m=s("p"),Ne=f("在 ESP-IDF 中打开项目 使用 "),J=s("code"),Ve=f("idf.py menuconfig"),$e=f(" 命令"),qe=s("br"),Ue=f(`
搜索 `),K=s("code"),Ge=f("font 26"),je=f(" 选择 LV_FONTMONTSERRAT_26(=n) “Enable Montserrat 26” 启用后保存"),Fe=p(),T=s("h3"),N=s("a"),Ye=f("设置 psram 为 120MHz"),Ee=p(),g=new De(!1),ee=p(),O=s("h3"),V=s("a"),Ze=f("设置 flash 为 120MHz"),ue=p(),le=new De(!1),te=p(),H=s("h3"),$=s("a"),We=f("设置 data cache line"),ve=p(),ae=new De(!1),se=p(),R=s("h3"),q=s("a"),Qe=f("开启防撕裂模式"),_e=p(),ie=new De(!1),oe=p(),b=s("h2"),U=s("a"),Xe=f("编译烧录"),me=p(),A=s("p"),Je=f("在 ESP-IDF 中使用 "),re=s("code"),Ke=f("idf.py build"),ge=f(" 编译后进行烧录"),this.h()},l(e){c=i(e,"H2",{id:!0});var a=o(c);v=i(a,"A",{href:!0});var tl=o(v);D=d(tl,"环境需求"),tl.forEach(l),a.forEach(l),y=F(e),n=i(e,"UL",{});var G=o(n);_=i(G,"LI",{});var al=o(_);z=d(al,"ESP32-S3-LCD-EV-BOARD"),al.forEach(l),Se=F(G),C=i(G,"LI",{});var el=o(C);S=i(el,"A",{href:!0,rel:!0,target:!0});var sl=o(S);Ae=d(sl,"SquareLine Stdio"),sl.forEach(l),Le=d(el," v1.3.1"),el.forEach(l),Me=F(G),j=i(G,"LI",{});var il=o(j);Ie=d(il,"ESP-IDF v5.0.2"),il.forEach(l),G.forEach(l),ne=F(e),M=i(e,"H2",{id:!0});var ol=o(M);k=i(ol,"A",{href:!0});var rl=o(k);Pe=d(rl,"创建项目"),rl.forEach(l),ol.forEach(l),fe=F(e),u=i(e,"OL",{});var h=o(u);Y=i(h,"LI",{});var nl=o(Y);Te=d(nl,"在 SquareLine Stdio 的欢迎菜单中选择 Example，选择任意一个示例项目，点击 creat，待相关文件加载完毕"),nl.forEach(l),Oe=F(h),Z=i(h,"LI",{});var fl=o(Z);He=d(fl,"打开 flie 选项卡的 Project setting 修改 BOARD GROUP 为 Espressif，选择 开发板型号并保存"),fl.forEach(l),Re=F(h),W=i(h,"LI",{});var dl=o(W);be=d(dl,"在 Font Manager 选项卡的 CREATFONT 下进行 modify 以防报错"),dl.forEach(l),xe=F(h),Q=i(h,"LI",{});var cl=o(Q);ze=d(cl,"在 Inspector 选项卡的 STYLE(MAIN) 下 确定项目的 Text Font，以便稍后修改"),cl.forEach(l),Ce=F(h),X=i(h,"LI",{});var pl=o(X);ke=d(pl,"在 Export 选项卡中导出项目，先 Creat Template project 然后再 Export UI Files"),pl.forEach(l),h.forEach(l),de=F(e),I=i(e,"H2",{id:!0});var Fl=o(I);w=i(Fl,"A",{href:!0});var El=o(w);we=d(El,"修改 Menuconfig"),El.forEach(l),Fl.forEach(l),ce=F(e),P=i(e,"H3",{id:!0});var ul=o(P);B=i(ul,"A",{href:!0});var vl=o(B);Be=d(vl,"修改字体"),vl.forEach(l),ul.forEach(l),pe=F(e),m=i(e,"P",{});var L=o(m);Ne=d(L,"在 ESP-IDF 中打开项目 使用 "),J=i(L,"CODE",{});var _l=o(J);Ve=d(_l,"idf.py menuconfig"),_l.forEach(l),$e=d(L," 命令"),qe=i(L,"BR",{}),Ue=d(L,`
搜索 `),K=i(L,"CODE",{});var ml=o(K);Ge=d(ml,"font 26"),ml.forEach(l),je=d(L," 选择 LV_FONTMONTSERRAT_26(=n) “Enable Montserrat 26” 启用后保存"),L.forEach(l),Fe=F(e),T=i(e,"H3",{id:!0});var hl=o(T);N=i(hl,"A",{href:!0});var Dl=o(N);Ye=d(Dl,"设置 psram 为 120MHz"),Dl.forEach(l),hl.forEach(l),Ee=F(e),g=ye(e,!1),ee=F(e),O=i(e,"H3",{id:!0});var yl=o(O);V=i(yl,"A",{href:!0});var Sl=o(V);Ze=d(Sl,"设置 flash 为 120MHz"),Sl.forEach(l),yl.forEach(l),ue=F(e),le=ye(e,!1),te=F(e),H=i(e,"H3",{id:!0});var Al=o(H);$=i(Al,"A",{href:!0});var Ll=o($);We=d(Ll,"设置 data cache line"),Ll.forEach(l),Al.forEach(l),ve=F(e),ae=ye(e,!1),se=F(e),R=i(e,"H3",{id:!0});var Ml=o(R);q=i(Ml,"A",{href:!0});var Il=o(q);Qe=d(Il,"开启防撕裂模式"),Il.forEach(l),Ml.forEach(l),_e=F(e),ie=ye(e,!1),oe=F(e),b=i(e,"H2",{id:!0});var Pl=o(b);U=i(Pl,"A",{href:!0});var Tl=o(U);Xe=d(Tl,"编译烧录"),Tl.forEach(l),Pl.forEach(l),me=F(e),A=i(e,"P",{});var he=o(A);Je=d(he,"在 ESP-IDF 中使用 "),re=i(he,"CODE",{});var Ol=o(re);Ke=d(Ol,"idf.py build"),Ol.forEach(l),ge=d(he," 编译后进行烧录"),he.forEach(l),this.h()},h(){E(v,"href","#环境需求"),E(c,"id","环境需求"),E(S,"href","https://squareline.io/"),E(S,"rel","nofollow noopener noreferrer external"),E(S,"target","_blank"),E(k,"href","#创建项目"),E(M,"id","创建项目"),E(w,"href","#修改-menuconfig"),E(I,"id","修改-menuconfig"),E(B,"href","#修改字体"),E(P,"id","修改字体"),E(N,"href","#设置-psram-为-120mhz"),E(T,"id","设置-psram-为-120mhz"),g.a=ee,E(V,"href","#设置-flash-为-120mhz"),E(O,"id","设置-flash-为-120mhz"),le.a=te,E($,"href","#设置-data-cache-line"),E(H,"id","设置-data-cache-line"),ae.a=se,E(q,"href","#开启防撕裂模式"),E(R,"id","开启防撕裂模式"),ie.a=oe,E(U,"href","#编译烧录"),E(b,"id","编译烧录")},m(e,a){r(e,c,a),t(c,v),t(v,D),r(e,y,a),r(e,n,a),t(n,_),t(_,z),t(n,Se),t(n,C),t(C,S),t(S,Ae),t(C,Le),t(n,Me),t(n,j),t(j,Ie),r(e,ne,a),r(e,M,a),t(M,k),t(k,Pe),r(e,fe,a),r(e,u,a),t(u,Y),t(Y,Te),t(u,Oe),t(u,Z),t(Z,He),t(u,Re),t(u,W),t(W,be),t(u,xe),t(u,Q),t(Q,ze),t(u,Ce),t(u,X),t(X,ke),r(e,de,a),r(e,I,a),t(I,w),t(w,we),r(e,ce,a),r(e,P,a),t(P,B),t(B,Be),r(e,pe,a),r(e,m,a),t(m,Ne),t(m,J),t(J,Ve),t(m,$e),t(m,qe),t(m,Ue),t(m,K),t(K,Ge),t(m,je),r(e,Fe,a),r(e,T,a),t(T,N),t(N,Ye),r(e,Ee,a),g.m(xl,e,a),r(e,ee,a),r(e,O,a),t(O,V),t(V,Ze),r(e,ue,a),le.m(zl,e,a),r(e,te,a),r(e,H,a),t(H,$),t($,We),r(e,ve,a),ae.m(Cl,e,a),r(e,se,a),r(e,R,a),t(R,q),t(q,Qe),r(e,_e,a),ie.m(kl,e,a),r(e,oe,a),r(e,b,a),t(b,U),t(U,Xe),r(e,me,a),r(e,A,a),t(A,Je),t(A,re),t(re,Ke),t(A,ge)},p:Zl,d(e){e&&l(c),e&&l(y),e&&l(n),e&&l(ne),e&&l(M),e&&l(fe),e&&l(u),e&&l(de),e&&l(I),e&&l(ce),e&&l(P),e&&l(pe),e&&l(m),e&&l(Fe),e&&l(T),e&&l(Ee),e&&g.d(),e&&l(ee),e&&l(O),e&&l(ue),e&&le.d(),e&&l(te),e&&l(H),e&&l(ve),e&&ae.d(),e&&l(se),e&&l(R),e&&l(_e),e&&ie.d(),e&&l(oe),e&&l(b),e&&l(me),e&&l(A)}}}function Xl(x){let c,v;const D=[x[0],bl];let y={$$slots:{default:[Ql]},$$scope:{ctx:x}};for(let n=0;n<D.length;n+=1)y=ll(y,D[n]);return c=new Wl({props:y}),{c(){Vl(c.$$.fragment)},l(n){$l(c.$$.fragment,n)},m(n,_){ql(c,n,_),v=!0},p(n,[_]){const z=_&1?Ul(D,[_&1&&Hl(n[0]),_&0&&Hl(bl)]):{};_&2&&(z.$$scope={dirty:_,ctx:n}),c.$set(z)},i(n){v||(Gl(c.$$.fragment,n),v=!0)},o(n){jl(c.$$.fragment,n),v=!1},d(n){Yl(c,n)}}}const bl={title:"LVGL 初探",image:"",alt:"Az",created:"2023-08-05T00:00:00.000Z",updated:"2023-08-05T00:00:00.000Z",summary:"使用 SquareLine Stdio 的 GUI 开发",tags:["IoT"],images:[],slug:"/20230805/+page.svelte.md",path:"/20230805",toc:[{depth:2,title:"环境需求",slug:"环境需求"},{depth:2,title:"创建项目",slug:"创建项目"},{depth:2,title:"修改 Menuconfig",slug:"修改-menuconfig"},{depth:3,title:"修改字体",slug:"修改字体"},{depth:3,title:"设置 psram 为 120MHz",slug:"设置-psram-为-120mhz"},{depth:3,title:"设置 flash 为 120MHz",slug:"设置-flash-为-120mhz"},{depth:3,title:"设置 data cache line",slug:"设置-data-cache-line"},{depth:3,title:"开启防撕裂模式",slug:"开启防撕裂模式"},{depth:2,title:"编译烧录",slug:"编译烧录"}]};function Jl(x,c,v){return x.$$set=D=>{v(0,c=ll(ll({},c),Rl(D)))},c=Rl(c),[c]}class et extends wl{constructor(c){super(),Bl(this,c,Jl,Xl,Nl,{})}}export{et as component};
